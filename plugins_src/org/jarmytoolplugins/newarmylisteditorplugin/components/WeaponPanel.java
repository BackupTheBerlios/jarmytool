/*
 * WeaponPanel.java
 *
 * Created on 18 October 2003, 21:14
 */

package org.jarmytoolplugins.newarmylisteditorplugin.components;

import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import org.jArmyTool.data.dataBeans.armylist.ArmylistArmy;
import org.jArmyTool.data.dataBeans.armylist.ArmylistWeapon;
import org.jArmyTool.data.dataBeans.util.WeaponProfile;
import org.jarmytoolplugins.newarmylisteditorplugin.util.VerticalFlowLayout;


/**
 *
 * @author  pasi
 */
public class WeaponPanel extends javax.swing.JPanel {
    
    private ArmylistArmy army; 
    private LinkedList panels;
    
    private Collection defaultSelected;
    
    private String updateName;
    
    /** Creates new form WeaponPanel */
    public WeaponPanel(ArmylistArmy army, Collection defaultSelected, String updateName) {
        this.updateName = updateName;
        this.defaultSelected = defaultSelected;
        this.panels = new LinkedList();
        this.army = army;
        
        initComponents();
        //this.weaponsPanel.setLayout(new VerticalFlowLayout());
        this.initAddWeaponPanel();
    }
    
    private void initAddWeaponPanel(){
        Iterator iterator = this.army.getGameSystem().getWeaponProfiles().iterator();
        while(iterator.hasNext()){
            String profileName = ((WeaponProfile)iterator.next()).getName();
            
            if(this.army.getWeapons(profileName).isEmpty())
                continue;
            
            Collection weaponsInGroup = this.army.getWeapons(profileName);
            
            LinkedList selectedInThisGroup = new LinkedList();
            Iterator defaults = this.defaultSelected.iterator();
            while(defaults.hasNext()){
                ArmylistWeapon wep = (ArmylistWeapon)defaults.next();
                if(weaponsInGroup.contains(wep))
                    selectedInThisGroup.add(wep);
            }
            
            WeaponGroupPanel panel = new WeaponGroupPanel(profileName, weaponsInGroup, selectedInThisGroup, this.updateName);
            panel.setBorder(new javax.swing.border.TitledBorder(profileName));
            this.panels.add(panel);
            this.weaponsPanel.add(panel);
        }
    }
    
    public Collection getSelectedWeapons(){
        LinkedList ret = new LinkedList();
        Iterator iterator = this.panels.iterator();
        while(iterator.hasNext()){
            ret.addAll( ((WeaponGroupPanel)iterator.next()).getSelectedWeapons() );
        }

        return ret;
    }
    
    
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        selectedWeaponsPanel = new javax.swing.JPanel();
        weaponsPanel = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        add(selectedWeaponsPanel, java.awt.BorderLayout.NORTH);

        weaponsPanel.setLayout(new java.awt.GridLayout());

        add(weaponsPanel, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel selectedWeaponsPanel;
    private javax.swing.JPanel weaponsPanel;
    // End of variables declaration//GEN-END:variables
    
}
