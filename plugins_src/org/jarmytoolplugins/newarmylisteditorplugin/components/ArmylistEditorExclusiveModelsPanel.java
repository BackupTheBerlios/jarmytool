/*
 * ArmylistEditorExclusiveModelsPAnel.java
 *
 * Created on 07 December 2003, 13:03
 */

package org.jarmytoolplugins.newarmylisteditorplugin.components;

import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import org.jArmyTool.data.dataBeans.armylist.ArmylistModel;
import org.jArmyTool.data.dataBeans.armylist.ArmylistUnit;
import org.jarmytoolplugins.newarmylisteditorplugin.util.ExclusiveCheckBox;

/**
 *
 * @author  pasi
 */
public class ArmylistEditorExclusiveModelsPanel extends javax.swing.JPanel {
    
    private ArmylistUnit unit;
    private ArmylistModel mainModel;
    private int mainModelId;
    private LinkedList checkboxes;
    //private ArmylistEditorUnitPanel parent;
    private boolean inclusive;

    
    /** Creates new form ArmylistEditorExclusiveModelsPAnel */
    public ArmylistEditorExclusiveModelsPanel(ArmylistUnit unit, ArmylistModel mainModel, boolean inclusive) {
        
        this.inclusive = inclusive;
        this.unit = unit;
        this.mainModel = mainModel;
        this.mainModelId = this.unit.getArmylistArmy().getIdForModel(this.mainModel);
       // this.parent = parent;
        initComponents();
        this.checkboxes = new LinkedList();
        
        this.initData();
        this.prefillData();
    }
    
    private void initData(){
       
        Iterator iterator = this.unit.getModelIds().iterator();
        while(iterator.hasNext()){
            int id = ((Integer)iterator.next()).intValue();
            if(id == this.mainModelId)
                continue;
            ExclusiveCheckBox box = new ExclusiveCheckBox(this.unit.getArmylistArmy().getModel(id), id);
            this.checkBoxesPanel.add(box);
            this.checkboxes.add(box);
        }
    }
    
    private void prefillData(){

        Collection selected = null;
        if(this.inclusive){
            selected = this.unit.getInclusivesForModel(this.mainModelId);
        }else{
            selected = this.unit.getExclusivesForModel(this.mainModelId);
        }
        if (selected == null){
            return;
        }
        
        Iterator iterator = this.checkboxes.iterator();
        while(iterator.hasNext()){
            ExclusiveCheckBox box = (ExclusiveCheckBox)iterator.next();
            Integer id = new Integer(box.getId()) ;
            if(selected.contains(id))
                box.setSelected(true);
        }
    }
    
    public void refreshNames(){
        Iterator iterator = this.checkboxes.iterator();
        while(iterator.hasNext()){
            ((ExclusiveCheckBox)iterator.next()).refreshName();
        }
    }
    
    public void addModel(int id){
        if(id == this.mainModelId)
            return;
        ExclusiveCheckBox box = new ExclusiveCheckBox(this.unit.getArmylistArmy().getModel(id), id);
        this.checkBoxesPanel.add(box);
        this.checkboxes.add(box);
    }
    

    public void saveData(){
        LinkedList selected = new LinkedList();
        Iterator iterator = this.checkboxes.iterator();
        while(iterator.hasNext()){
            ExclusiveCheckBox box = (ExclusiveCheckBox)iterator.next();
            if(box.isSelected())
                selected.add(new Integer(box.getId()));
        }
        if(this.inclusive){
            this.unit.updateInclusivesForModel(this.mainModelId, selected);
        }else{
            this.unit.updateExclusivesForModel(this.mainModelId, selected);
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        checkBoxesPanel = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        add(checkBoxesPanel, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel checkBoxesPanel;
    // End of variables declaration//GEN-END:variables
    
}
