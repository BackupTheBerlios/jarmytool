/*
 * ModelStatsPanel.java
 *
 * Created on 07 January 2004, 01:32
 */

package org.jarmytoolplugins.newarmylisteditorplugin.components;

import java.awt.BorderLayout;
import java.lang.StringBuffer;
import java.util.Iterator;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.jArmyTool.data.dataBeans.armylist.ArmylistModel;
import org.jArmyTool.data.dataBeans.util.ModelStat;
import org.jArmyTool.data.dataBeans.util.ModelStatHolder;
import org.jArmyTool.data.dataBeans.util.StatType;

/**
 *
 * @author  pasi
 */
public class ModelStatsPanel extends javax.swing.JPanel {
    
    private ArmylistModel model;
    private DefaultTableModel tableModel;
    private DefaultTableModel tableModel1;
    
    
    /** Creates new form ModelStatsPanel */
    public ModelStatsPanel(ArmylistModel model) {
        this.model = model;
        initComponents();
        this.initTable();
    }
    
    private void initTable(){
        
        if (this.model.getStatTypeName() == null){
            this.model.setStatType((String)this.model.getArmylistArmy().getGameSystem().getStatTypeNames().iterator().next());
        }
        
        StatType type = this.model.getArmylistArmy().getGameSystem().getStatType(this.model.getStatTypeName());

        int headersSize = type.getAllStats().size();
        
        if(this.model.getStats() == null){
            StringBuffer buf = new StringBuffer();
            for(int j = 0; j < headersSize; ++j){
                buf.append(" ");
                if(j+1 < headersSize){
                    buf.append(",");
                }
            }
            
            this.model.setStatValues(buf.toString(), ",");
        }
        
        
        Vector headers = new Vector();
        Vector longheaders = new Vector();
        Iterator stats = type.getAllStats().iterator();
        Iterator statsV = this.model.getStats().iterator();
        Vector statValues = new Vector();
        Vector longStatValues = new Vector();
        while(stats.hasNext())
        {    
            String temp = ((ModelStat)stats.next()).getSymbol();
            if(temp.length() > 2)
            {
                longheaders.add(temp);
                longStatValues.add(((ModelStatHolder)statsV.next()).getValue());
            }
                
            else
            {
                headers.add( temp );
                statValues.add(((ModelStatHolder)statsV.next()).getValue());
            }
        }
        
        this.tableModel = new DefaultTableModel(headers, 0);
        this.tableModel.addRow(statValues);
        
        this.tableModel1 = new DefaultTableModel(longheaders, 0);
        this.tableModel1.addRow(longStatValues);
        
        
        //this.basePanel.add(this.table.getTableHeader(), BorderLayout.NORTH);
        
        
        
        this.table.setModel(this.tableModel);
        this.table1.setModel(this.tableModel1);
    }
    
    public String getAsText(String separator){
        this.table.editCellAt(0,0);
        this.table1.editCellAt(0,0);
        StringBuffer buf = new StringBuffer();
        
        Iterator j = this.model.getStats().iterator();
        int i1 = 0;
        int i2 = 0;
        while(j.hasNext())
        {
            if( ((ModelStatHolder)j.next()).getStat().getSymbol().length() <= 2)
            {
                String next = " ";
                if(this.tableModel.getValueAt(0, i1) != null && this.tableModel.getValueAt(0, i1).toString() != null)
                    next = this.tableModel.getValueAt(0, i1++).toString();
            
                buf.append(next);
                if(j.hasNext())
                    buf.append(separator);
            }
            else
            {
                String next = " ";
                if(this.tableModel1.getValueAt(0, i2) != null && this.tableModel1.getValueAt(0, i2).toString() != null)
                    next = this.tableModel1.getValueAt(0, i2++).toString();
            
                buf.append(next);
                if(j.hasNext())
                    buf.append(separator);
            }
        }
        return buf.toString();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        basePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        basePanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        setMinimumSize(new java.awt.Dimension(200, 150));
        setPreferredSize(new java.awt.Dimension(250, 150));
        jScrollPane1.setMaximumSize(new java.awt.Dimension(250, 50));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(200, 50));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(250, 50));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table);

        basePanel.add(jScrollPane1);

        add(basePanel);

        jScrollPane2.setMaximumSize(new java.awt.Dimension(250, 50));
        jScrollPane2.setMinimumSize(new java.awt.Dimension(200, 50));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(250, 50));
        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(table1);

        basePanel1.add(jScrollPane2);

        add(basePanel1);

    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel basePanel;
    private javax.swing.JPanel basePanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table;
    private javax.swing.JTable table1;
    // End of variables declaration//GEN-END:variables
    
}
